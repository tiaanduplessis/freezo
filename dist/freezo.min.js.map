{"version":3,"file":"freezo.min.js","sources":["../src/utils.js"],"sourcesContent":["const isObject = function (val) {\n  return (\n    typeof val === 'object' &&\n    val.constructor === Object &&\n    Object.getPrototypeOf(val) === Object.prototype\n  )\n}\n\nconst isValidType = function (val) {\n  return val && (Array.isArray(val) || isObject(val))\n}\n\nconst map = function (val, iter) {\n  if (Array.isArray(val)) {\n    return val.forEach((val, index) => iter(index, val))\n  }\n\n  const keys = Object.keys(val)\n\n  keys.forEach(key => {\n    iter(key, val[key])\n  })\n}\n\nexport { isValidType, map }\n"],"names":["const"],"mappings":"kLAAAA"}